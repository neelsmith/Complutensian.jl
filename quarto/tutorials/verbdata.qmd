# Exploring co-occurring verb data

In addition to [working directly with the texts](./parsecorpora.qmd) of the Complutensian Bible, you can download and analyze precompiled records of co-occurring verb forms. 


```{julia}
#| warning: false
#| output: false
using Complutensian
verbdata = loadverbdata()
```


## Verbs in the corpus

Get a list of all verbs appearing in the data set:

```{julia}
allverbs = verblist(verbdata)
length(allverbs)
```


Verbs are identified with string values for `LexemeUrn`s (from the `CitableParserBuilder` package).

```{julia}
allverbs[1]
```

`Complutensian.jl` gives you lots of functions that can work with these lexeme IDs.


`Complutensian.jl` includes functions to label these IDs with strings human beings can interpret. You can download a dictionary that labels lexemes with the first  occurrences of the lexeme in the Vulgate.
```{julia}
labels = loadlabels()
labellex(allverbs[1]; labelsdict = labels)
```



## Passages in the corpus

Use a verb ID to find all passages where the verb occurs. Since we saw in the labelling information that `ls.n11543` is the ID for the verb *creo*, we'll use a more mnemonic variable name to make our code readable.

```{julia}
creo = "ls.n11543"
creopassages = passagesforverb(creo, verbdata)
length(creopassages)
```

*creo* appears in fifteen passages in the corpus.

Passages are identified by a sequential integer. The results are ordered. We can see that *creo* occurs in the very first passage of our documents, but then not again until the twenty first.

```{julia}
creopassages[1:2]
```



::: {.callout-tip title="Canonical identifiers"}
Although `Complutensian.jl` uses integers to identify passages in the corpus, we can find full CTS URNs for a passage.

```{julia}
urnforpassage(creopassages[2], verbdata)
```
:::

## Frequencies in a multi-document corpus

The compilation of verb co-occurences records the verbs in each passage for the Vulgate, the Latin glosses on the Septuagint, and the Latin glosses on the Targum Onkelos.

We can compile a dictionary of how many times a verb appears in these three documents for each passage.

If we look up *creo* in that dictionary, we will get a second dictionary keyed by passages where *creo* occurs.

```{julia}
verbcountsbylexeme = countsbyverb(verbdata)
verbcountsbylexeme[creo] |> length
```


Note that since this dictionary for *creo* is keyed by passages where *creo* occurs, its size will be the same as the number of passages for *creo* that we have already seen.

We can now find how many times *creo* appears in a a given passage. In the first passage, for example, *creo* appears twice.

```{julia}
verbcountsbylexeme[creo][1]
```


We can also find out which of the three documents in the corpus *creo* appears in for a passage.

```{julia}
documentsforverb(creo, 1, verbdata)
```

The complement to this is:

```{julia}
missingforverb(creo, 1, verbdata)
```


## Scoring co-occurrences

::: {.callout-caution}
This section is incomplete.
:::


*creo* is never used in all three documents for the same passage.


```{julia}
slashline(creo, verbdata)
```

Can we align it with other verbs in the other passages?

How do we align it in missing slots?


```{julia}
creoscores =cooccurrencescores(creo, verbdata)
```

The first two appear more than 50% of the time.

```{julia}
lexids = collect(keys(creoscores))
labellex.(lexids[1:2]; labelsdict = labels)
```

This is actually the logical basis for the alignment features describe in [this tutorial](./alignments.qmd)

